＃ストラテジーゲーム
！変数宣言は必要

＃＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
＃　母艦設計

！母艦設計=「母艦の可視はオフ」
母艦のスタイルは「枠固定」
母艦はオフに最大化ボタン有効変更。
母艦のクライアント幅は640
母艦のクライアント高さは480。
母艦をＸは20
母艦をＹは96
母艦の可視はオン。

＃＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊

＃＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
＃　色定数定義

！黒色は＄000000

＃＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊

＃＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
＃　グローバル変数定義
！部隊横数は10
！部隊縦数は10
！部隊数は部隊横数＊部隊縦数

部隊群とは配列
一時部隊とは一群

移動マウスＸとは整数
移動マウスＹとは整数

＃＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊



＃＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
＃　プログラム

母艦のマウス移動した時は
	移動マウスＸは母艦のマウスＸ
	移動マウスＹは母艦のマウスＹ

主な処理をする
	
●主な処理
	背景色とは整数
	背景色は黒色
	
	入力機構を初期化する
	初期化処理をする
	
	真の間
		背景色で画面クリア

		入力機構を更新する
		更新処理をする
		描画処理をする

		描画処理反映

		もし、エスケープキーが押されているならば
			抜ける

		0.016秒待つ
	ここまで
	終わる

●初期化処理
	横座標とは整数
	縦座標とは整数
	添え字とは整数
	添え字は0
	
	縦座標は100
	部隊縦数回
		横座標は100
		部隊横数回
			部隊群［添え字］を一群として作成
			部隊群［添え字］→再設定（横座標、縦座標）
			添え字に1を直接足す
			
			横座標に15を直接足す
		ここまで
		縦座標に15を直接足す
	ここまで

	操作を初期化する

●更新処理
＃反復は実体コピーのようなので更新が反映されない！！
＃	部隊群を反復
＃		対象→更新する
＃	ここまで
	添え字とは整数
	添え字は0
	
	部隊数回
		部隊群[添え字]→更新する
		添え字に1を直接足す
	ここまで

	操作を更新する

●描画処理
	0,0へ移動

＃	部隊群を反復
＃		対象→描画する
＃	ここまで
	添え字とは整数
	添え字は0
	
	部隊数回
		部隊群[添え字]→描画する
		添え字に1を直接足す
	ここまで

	操作を描画する

＃　プログラム終了
＃＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊


＃＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
＃　入力機構

！左マウスは0
！右マウスは1
！左キーは2
！右キーは3
！上キーは4
！下キーは5
！エスケープキーは6

キー番号配列とは配列
前回キー状態とは整数
今回キー状態とは整数
今押されたキーとは整数
今放されたキーとは整数
マウスＸとは整数
マウスＹとは整数

●入力機構を初期化
	キー番号配列￥左マウスは1
	キー番号配列￥右マウスは2
	キー番号配列￥左キーは37
	キー番号配列￥右キーは39
	キー番号配列￥上キーは38
	キー番号配列￥下キーは40
	キー番号配列￥エスケープキーは27
	
	前回キー状態は0
	今回キー状態は0

●入力機構を更新
	前回キー状態は今回キー状態
	今回キー状態は0

	キーフラグとは整数
	添え字とは整数
	添え字は0

	キー番号配列の配列要素数回
		キーフラグはキー番号配列￥添え字でキー状態
		今回キー状態はOR（キーフラグ＜＜添え字、今回キー状態）
		添え字に1を直接足す
	ここまで
		
	今押されたキーはAND（XOR（前回キー状態、$FFFF）、今回キー状態）
	今放されたキーはAND（XOR（今回キー状態、$FFFF）、前回キー状態）

	マウスＸは移動マウスＸ
	マウスＹは移動マウスＹ

●マウス座標の更新
	デバッグ

●押されている（キーが）〜
	もし、AND（今回キー状態、1＜＜キー）が0ならば
		いいえで戻る
	違えば
		はいで戻る

●今押された（キーが）〜
	もし、AND（今押されたキー、1＜＜キー）が0ならば
		いいえで戻る
	違えば
		はいで戻る

●今放された（キーが）〜
	もし、AND（今放されたキー、1＜＜キー）が0ならば
		いいえで戻る
	違えば
		はいで戻る
＃　入力機構終了
＃＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊

＃＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
＃　操作

！ドラッグ枠色は$008000
！目標表示カウントは60

操作状態とは文字列
操作カウンタとは整数

範囲開始横座標とは整数
範囲開始縦座標とは整数
範囲終了横座標とは整数
範囲終了縦座標とは整数

目標開始横座標とは整数
目標開始縦座標とは整数
目標終了横座標とは整数
目標終了縦座標とは整数

●操作を初期化する
	操作状態は「なし」

●操作を更新する
	操作状態で条件分岐
		「なし」ならば
			もし、左マウスが今押されたならば
				範囲開始横座標はマウスＸ
				範囲開始縦座標はマウスＹ
				範囲終了横座標はマウスＸ
				範囲終了縦座標はマウスＹ
				操作状態は「範囲指定中」
				
		「範囲指定中」ならば
			範囲終了横座標はマウスＸ
			範囲終了縦座標はマウスＹ
			もし、左マウスが今放されたならば
				もし、ABS(範囲終了横座標から範囲開始横座標を引く)が4　以下｜｜
				ABS(範囲終了縦座標から範囲開始縦座標を引く)が4 以下ならば
					操作状態は「なし」
				違えば
					操作状態は「範囲指定済み」

		「範囲指定済み」ならば
			もし、左マウスが今押されたならば
				もし、マウスＸ、マウスＹが、
				範囲開始横座標、範囲終了横座標、
				範囲開始縦座標、範囲終了縦座標の、
				矩形範囲内ならば
					目標開始横座標はマウスＸ
					目標開始縦座標はマウスＹ			
					目標終了横座標はマウスＸ
					目標終了縦座標はマウスＹ
					操作状態は「目標指示中」
				違えば
					操作状態は「なし」

		「目標指示中」ならば
			目標終了横座標はマウスＸ
			目標終了縦座標はマウスＹ
			もし、左マウスが今放されたならば
				操作から指示する
				操作カウンタは目標表示カウント
				操作状態は「目標表示中」

		「目標表示中」ならば
			操作カウンタから1を直接引く
			もし、操作カウンタが0ならば
				操作状態は「なし」

			もし、左マウスが今押されたならば
				範囲開始横座標はマウスＸ
				範囲開始縦座標はマウスＹ
				範囲終了横座標はマウスＸ
				範囲終了縦座標はマウスＹ
				操作状態は「範囲指定中」

●操作から指示する
	添え字とは整数
	添え字は0
	
	部隊数回
		もし、部隊群[添え字]→横座標、
		部隊群[添え字]→縦座標が、
		範囲開始横座標、範囲終了横座標、
		範囲開始縦座標、範囲終了縦座標の、
		矩形範囲内ならば
			部隊群[添え字]→移動(目標終了横座標、目標終了縦座標)

		添え字に1を直接足す
	ここまで


●操作を描画する
	線太さは1
	線色はドラッグ枠色
	塗りスタイルは「透明」

	もし、操作状態が「範囲指定中」または操作状態が「範囲指定済み」または、
	操作状態が「目標指示中」または操作状態が「目標表示中」ならば
		範囲開始横座標,範囲開始縦座標から、
		範囲終了横座標,範囲終了縦座標へ四角	

	もし、操作状態が「目標指示中」または操作状態が「目標表示中」ならば
		目標開始横座標,目標開始縦座標から、
		目標終了横座標,目標終了縦座標へ線

＃		デバッグ

＃　操作終了
＃＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊

＃＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
＃　一群グループ
■一群
	・｛文字列｝状態
	・｛実数｝横座標
	・｛実数｝縦座標
	・｛実数｝目標横
	・｛実数｝目標縦
	・｛実数｝横ベクトル
	・｛実数｝縦ベクトル
	・｛実数｝速さ
	・｛整数｝幅｛＝2｝
	・｛整数｝高さ｛＝2｝
	・｛整数｝体色

	＃コンストラクタ
	・作る〜
		状態は「停止」
		速さは0.5
		体色は$FF0000

	・更新〜
		状態で条件分岐
			「停止」ならば
				
			「移動」ならば
				横座標は横座標＋横ベクトル＊速さ
				縦座標は縦座標＋縦ベクトル＊速さ

				もし、横座標、縦座標が目標横、目標縦、5の円範囲内なら
					状態は「停止」
				


	・描画〜
		塗り色は体色
		線色は体色
		横座標,縦座標から横座標に幅を足す,縦座標に高さを足すへ四角
		
	・再設定（横、縦に）〜
		横座標は横
		縦座標は縦
		状態は「停止」

	・移動（横、縦）〜
		目標横は横
		目標縦は縦
		横ベクトルは目標横−横座標
		縦ベクトルは目標縦−縦座標
		横ベクトル、縦ベクトルをベクトル正規化
		状態は「移動」

＃　一群グループ終了
＃＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊

＃＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
＃　便利関数
●小さい方（値１と値２の）
	もし、値１が値２以下なら
		値１で戻る
	違えば
		値２で戻る

●大きい方（値１と値２の）
	もし、値１が値２以上なら
		値１で戻る
	違えば
		値２で戻る

●矩形範囲内（Ｘ、Ｙが横１、横２、縦１、縦２の）
	もしＸが(横１と横２の小さい方)以下なら、いいえで戻る
	もしＸが(横１と横２の大きい方)以上なら、いいえで戻る
	もしＹが(縦１と縦２の小さい方)以下なら、いいえで戻る
	もしＹが(縦１と縦２の大きい方)以上なら、いいえで戻る

	はいで戻る

●円範囲内（Ｘ、Ｙが中心Ｘ、中心Ｙ、半径の）
	距離とは実数
	距離は((Ｘ−中心Ｘ)＾2)＋((Ｙ−中心Ｙ)＾2)
	距離は距離の平方根
	もし距離が半径以下なら
		はいで戻る
	違うなら
		いいえで戻る

●ベクトル正規化（｛参照渡し｝Ｘ、｛参照渡し｝Ｙを）
	大きさとは実数
	大きさは(Ｘ＊Ｘ＋Ｙ＊Ｙ)の平方根
	ＸはＸ÷大きさ
	ＹはＹ÷大きさ

＃　便利関数終了
＃＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊

